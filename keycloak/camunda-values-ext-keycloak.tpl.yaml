# Chart values for the Camunda Platform 8 Helm chart.
# This file deliberately contains only the values that differ from the defaults.
# For changes and documentation, use your favorite diff tool to compare it with:
# https://github.com/camunda/camunda-platform-helm/blob/main/charts/camunda-platform/values.yaml

global:
  ingress:
    enabled: true
    className: nginx
    host: "YOUR_HOSTNAME"
    tls:
      enabled: true
      secretName: "tls-secret"
  image:
    tag: 8.2.3
    # pullPolicy: Always
  identity:
    auth:
      publicIssuerUrl: "KEYCLOAK_PROTOCOL://KEYCLOAK_HOSTNAMEKEYCLOAK_CONTEXT_PATH/realms/camunda-platform"
      operate:
        redirectUrl: "https://YOUR_HOSTNAME/operate"
      tasklist:
        redirectUrl: "https://YOUR_HOSTNAME/tasklist"
      optimize:
        redirectUrl: "https://YOUR_HOSTNAME/optimize"
    keycloak:
      url:
        protocol: "KEYCLOAK_PROTOCOL"
        host: "KEYCLOAK_HOSTNAME"
        port: "KEYCLOAK_PORT"
      contextPath: "KEYCLOAK_CONTEXT_PATH"
      auth:
        adminUser: "admin"
        existingSecret: "camunda-keycloak"
        existingSecretKey: "admin-password"
      realm: "/realms/camunda-platform-dev"

operate:
  contextPath: "/operate"
  env:
    - name: JAVA_TOOL_OPTIONS
      value: "-Djavax.net.ssl.trustStore=/usr/local/certificates/cacerts_staging"
  extraVolumeMounts:
    - mountPath: /usr/local/certificates/cacerts_staging
      subPath: cacerts_staging
      name: cacerts-staging
  extraVolumes:
    - name: cacerts-staging
      secret:
        secretName: cacerts-staging
        items:
          - key: cacerts_staging
            path: cacerts_staging

tasklist:
  contextPath: "/tasklist"
  env:
    - name: JAVA_TOOL_OPTIONS
      value: "-Djavax.net.ssl.trustStore=/usr/local/certificates/cacerts_staging"
  extraVolumeMounts:
    - mountPath: /usr/local/certificates/cacerts_staging
      subPath: cacerts_staging
      name: cacerts-staging
  extraVolumes:
    - name: cacerts-staging
      secret:
        secretName: cacerts-staging
        items:
          - key: cacerts_staging
            path: cacerts_staging

optimize:
  contextPath: "/optimize"
  env:
    - name: JAVA_TOOL_OPTIONS
      value: "-Djavax.net.ssl.trustStore=/usr/local/certificates/cacerts_staging"
  extraVolumeMounts:
    - mountPath: /usr/local/certificates/cacerts_staging
      subPath: cacerts_staging
      name: cacerts-staging
  extraVolumes:
    - name: cacerts-staging
      secret:
        secretName: cacerts-staging
        items:
          - key: cacerts_staging
            path: cacerts_staging

identity:
  contextPath: "/identity"
  fullURL: "https://YOUR_HOSTNAME/identity"
  keycloak:
    enabled: false
  env:
    - name: JAVA_TOOL_OPTIONS
      value: "-Djavax.net.ssl.trustStore=/usr/local/certificates/cacerts_staging"
  extraVolumeMounts:
    - mountPath: /usr/local/certificates/cacerts_staging
      subPath: cacerts_staging
      name: cacerts-staging
  extraVolumes:
    - name: cacerts-staging
      secret:
        secretName: cacerts-staging
        items:
          - key: cacerts_staging
            path: cacerts_staging

zeebe-gateway:
  ingress:
    enabled: true
    className: nginx
    host: "YOUR_HOSTNAME"
  replicas: 1
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "2048Mi"
      cpu: "1000m"

zeebe:
  clusterSize: 1
  partitionCount: 1
  replicationFactor: 1
  pvcSize: 1Gi

  resources:
    requests:
      cpu: "100m"
      memory: "512M"
    limits:
      cpu: "512m"
      memory: "2Gi"

elasticsearch:
  enabled: true
  imageTag: 7.17.3
  replicas: 1
  minimumMasterNodes: 1
  # Allow no backup for single node setups
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
  resources:
    requests:
      cpu: "100m"
      memory: "512M"
    limits:
      cpu: "1000m"
      memory: "2Gi"






