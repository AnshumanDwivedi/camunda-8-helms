# Chart values for the Camunda Platform 8 Helm chart.
# This file deliberately contains only the values that differ from the defaults.
# For changes and documentation, use your favorite diff tool to compare it with:
# https://github.com/camunda/camunda-platform-helm/blob/main/charts/camunda-platform/values.yaml
# See options: https://github.com/camunda/camunda-platform-helm/blob/main/charts/camunda-platform/README.md

global:
  ingress:
    enabled: true
    className: nginx
    host: "dnslabel.location.cloudapp.azure.com"
    #    annotations:
    #      cert-manager.io/cluster-issuer: "letsencrypt"
    tls:
      enabled: true
      secretName: "tls-secret"
  image:
    #tag: 8.2.3
    tag: latest
    # pullPolicy: Always
  identity:
    auth:
      publicIssuerUrl: "https://dnslabel.location.cloudapp.azure.com/auth/realms/camunda-platform"
      operate:
        redirectUrl: "https://dnslabel.location.cloudapp.azure.com/operate"
      tasklist:
        redirectUrl: "https://dnslabel.location.cloudapp.azure.com/tasklist"
      optimize:
        redirectUrl: "https://dnslabel.location.cloudapp.azure.com/optimize"

zeebe:
  clusterSize: 1
  partitionCount: 1
  replicationFactor: 1
  containerSecurityContext:
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000
  extraVolumes:
    - name: tmp
      emptyDir: {}
    - name: camunda
      emptyDir: {}
  extraVolumeMounts:
    - mountPath: /tmp
      name: tmp
    - mountPath: /camunda
      name: camunda
  pvcSize: 4Gi
  serviceAccount:
    # ServiceAccount.name can be used to set the name of the broker service account
    name: "camundapoc-zeebe-svcacc"
  automountServiceAccountToken: false

connectors:
  containerSecurityContext:
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccount:
    # ServiceAccount.enabled if true, enables the Web Modeler service account
    enabled: false
  automountServiceAccountToken: false
  extraVolumes:
    - name: tmp
      emptyDir: {}
  extraVolumeMounts:
    - mountPath: /tmp
      name: tmp

elasticsearch:
  enabled: true
  imageTag: 7.17.3
  replicas: 1
#  sysctlInitContainer:
#    enabled: false
  minimumMasterNodes: 1
  # Allow no backup for single node setups
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
  resources:
    requests:
      cpu: "100m"
      memory: "512M"
    limits:
      cpu: "1000m"
      memory: "2Gi"
#  securityContext:
#    privileged: false
#    readOnlyRootFilesystem: true
#    allowPrivilegeEscalation: false
#    runAsNonRoot: true
#    runAsUser: 1000
#  extraVolumes:
#    - name: tmp
#      emptyDir:
#        sizeLimit: 500Mi
#    - name: logs
#      emptyDir:
#        sizeLimit: 500Mi
#    - name: config
#      emptyDir:
#        sizeLimit: 500Mi
#  extraVolumeMounts:
#    - mountPath: /tmp
#      name: tmp
#    - mountPath: /usr/share/elasticsearch/logs
#      name: logs
#    - mountPath: /usr/share/elasticsearch/config
#      name: config
#  extraInitContainers:
#    - name: copy-configs
#      image:  "docker.artifactory.dhl.com/elasticsearch:7.17.10"
#      imagePullPolicy: "Always"
#      command: ["sh", "-c", "cp -ar /usr/share/elasticsearch/config/* /config"]
#      securityContext:
#        privileged: false
#        readOnlyRootFilesystem: true
#        allowPrivilegeEscalation: false
#        runAsNonRoot: true
#        runAsUser: 1000
#      volumeMounts:
#        - name: config
#          mountPath: /config

identity:
  contextPath: "/identity"
  fullURL: "https://dnslabel.location.cloudapp.azure.com/identity"

  containerSecurityContext:
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
  extraVolumes:
    - name: tmp
      emptyDir: { }
    - name: camunda
      emptyDir: { }
  extraVolumeMounts:
    - mountPath: /tmp
      name: tmp
    - mountPath: /camunda
      name: camunda

  serviceAccount:
    # ServiceAccount.name can be used to set the name of the broker service account
    name: "camundapoc-identity-svcacc"
  automountServiceAccountToken: false
  keycloak:
    extraEnvVars:
      - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
        value: "true"
      - name: KEYCLOAK_FRONTEND_URL
        value: "https://dnslabel.location.cloudapp.azure.com/auth"
    containerSecurityContext:
      enabled: true
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount:
      # ServiceAccount.name can be used to set the name of the broker service account
      name: "camundapoc-keycloak-svcacc"
    automountServiceAccountToken: false
    image:
      repository: bitnami/keycloak
      #      registry: docker.artifactory.dhl.com
      tag: 19.0.3
    extraVolumes:
      - name: config
        emptyDir: { }
      - name: quarkus
        emptyDir: { }
      - name: tmp
        emptyDir: { }
      - name: camunda-theme
        emptyDir:
          sizeLimit: 10Mi

    extraVolumeMounts:
      - mountPath: /opt/bitnami/keycloak/conf/
        name: config
      - mountPath: /opt/bitnami/keycloak/lib/quarkus
        name: quarkus
      - name: camunda-theme
        mountPath: /opt/bitnami/keycloak/themes/identity
      - mountPath: /tmp
        name: tmp

    initContainers:
      - name: copy-camunda-theme
        image: camunda/identity:8.2.7
        imagePullPolicy: "Always"
        command: [ "sh", "-c", "cp -a /app/keycloak-theme/* /mnt " ]
        volumeMounts:
          - name: camunda-theme
            mountPath: /mnt
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
      - name: copy-configs
        image: bitnami/keycloak:19.0.3
        imagePullPolicy: "Always"
        command: [ "sh", "-c", "cp -ar /opt/bitnami/keycloak/conf/* /config  && cp -a /opt/bitnami/keycloak/lib/quarkus/* /quarkus" ]
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
          - name: config
            mountPath: /config
          - name: quarkus
            mountPath: /quarkus

    postgresql:
      enabled: true
      containerSecurityContext:
        enabled: true
        privileged: false
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        runAsUser: 1000
      primary:
        extraVolumes:
          - name: tmp
            emptyDir: { }

        extraVolumeMounts:
          - mountPath: /tmp
            name: tmp
      image:
        repository: bitnami/postgresql
        #        registry: docker.artifactory.dhl.com
        tag: 15.3.0

operate:
  contextPath: "/operate"
  containerSecurityContext:
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
  extraVolumes:
    - name: tmp
      emptyDir: { }
    - name: camunda
      emptyDir: { }
  extraVolumeMounts:
    - mountPath: /tmp
      name: tmp
    - mountPath: /camunda
      name: camunda
  serviceAccount:
    # ServiceAccount.name can be used to set the name of the broker service account
    name: "camundapoc-operate-svcacc"
  automountServiceAccountToken: false

optimize:
  contextPath: "/optimize"
  containerSecurityContext:
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
  extraVolumes:
    - name: tmp
      emptyDir: { }
    - name: camunda
      emptyDir: { }
  extraVolumeMounts:
    - mountPath: /tmp
      name: tmp
    - mountPath: /camunda
      name: camunda
  serviceAccount:
    # ServiceAccount.name can be used to set the name of the broker service account
    name: "camundapoc-optimize-svcacc"
  automountServiceAccountToken: false

tasklist:
  contextPath: "/tasklist"
  containerSecurityContext:
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
  extraVolumes:
    - name: tmp
      emptyDir: { }
    - name: camunda
      emptyDir: { }
  extraVolumeMounts:
    - mountPath: /tmp
      name: tmp
    - mountPath: /camunda
      name: camunda

zeebe-gateway:
  ingress:
    enabled: true
    className: nginx
    host: "dnslabel.location.cloudapp.azure.com"
  replicas: 1
  containerSecurityContext:
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
  extraVolumes:
    - name: tmp
      emptyDir: { }
    - name: camunda
      emptyDir: { }
  extraVolumeMounts:
    - mountPath: /tmp
      name: tmp
    - mountPath: /camunda
      name: camunda

  serviceAccount:
    # ServiceAccount.name can be used to set the name of the broker service account
    name: "camundapoc-zeebegateway-svcacc"
  automountServiceAccountToken: false
