# ------------------------------------
# Set the following for your specific environment
# Already have a Cluster? Set these values to point to your existing environment
# Otherwise, these values will be used to create a new Cluster

#region ?= eastus
region ?= YOUR_REGION
clusterName ?= YOUR_CLUSTER_NAME
resourceGroup ?= YOUR_CLUSTER_NAME-rg

machineType ?= Standard_A8_v2
minSize ?= 1
maxSize ?= 6
certEmail ?= YOUR_EMAIL

# ------------------------------------
# The following variables should not be changed except for advanced use cases
ifeq ($(OS),Windows_NT)
    root ?= $(CURDIR)/../../../..
else
    root ?= $(shell pwd)/../../../..
endif

# Camunda components will be installed into the following Kubernetes namespace
namespace ?= camunda
# Helm release name
release ?= camunda
# Helm chart coordinates for Camunda
chart ?= camunda/camunda-platform

# This file will be generated by make targets
chartValues ?= $(root)/azure/camunda-values-azure.yaml

.PHONY: all
all: camunda-values-azure.yaml camunda external-urls

# 0 kube from aks.mk: Create Kubernetes cluster. (No aplication gateway required)
.PHONY: kube
kube: kube-nginx

# 1 create camunda-values-azure
camunda-values-azure.yaml:
	cp $(root)/development/camunda-values.yaml $(root)/azure/camunda-values-azure.yaml

# 2 helm install camunda from camunda.mk

# 3 Show external URLs
.PHONY: external-urls
external-urls: external-urls-no-ingress

### <--- End of setup --->

# Remove nginx ingress and Camunda from cluster
.PHONY: clean
clean: clean-camunda
	rm -f $(chartValues)

include $(root)/azure/include/aks.mk
include $(root)/include/camunda.mk
include $(root)/bpmn/deploy-models.mk
include $(root)/connectors/connectors.mk


