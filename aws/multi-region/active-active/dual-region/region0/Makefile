# ------------------------------------
# Set the following for your specific environment
# Already have a Cluster? Set these values to point to your existing environment
# Otherwise, these values will be used to create a new Cluster

region ?= us-west-2
peerRegion ?= us-east-2
zones ?= ['us-west-2d', 'us-west-2b']
clusterName ?= uswest2-region-0
peerClusterName ?= useast2-region-1
clusterVersion ?= 1.28
cidrBlock ?= 90.100.0.0\/16
publicAccess ?= true

# machineType ?= t3.medium
machineType ?= c6i.4xlarge
# TODO: Currently, auto scaling configuration using these scripts for AWS is not working
# desiredSize is used as the starting size of the cluster
desiredSize ?= 2
minSize ?= 2
maxSize ?= 6
volumeSize ?= 100
# certEmail ?= paul.lungu@camunda.com

# Configure the fully qualified domain name
# The dnsLabel is the first part of the domain address. It will be used no matter what baseDomain you configure below
# dnsLabel ?= paul

# By default, we'll use nip.io (See more at [https://nip.io](http://nip.io) )
# The fully qualified domain name will look something like <dnsLabel>.<ip address>.nip.io
# baseDomainName ?= nip.io

# Another option is to replace baseDomainName with your own domain name
# In this case, the fully qualified domain name will look like <dnsLabel>.<baseDomainName>
# baseDomainName ?= upgradingdave.com

# ------------------------------------
# Camunda Enterprise Docker Registry Login

camundaDockerRegistrySecretName ?= camunda-docker-registry-secret
camundaDockerRegistryUrl ?= registry.camunda.cloud
camundaDockerRegistryUsername ?= paul.lungu
camundaDockerRegistryPassword ?=
camundaDockerRegistryEmail ?= paul.lungu@camunda.com

# ------------------------------------
# The following variables should not be changed except for advanced use cases
ifeq ($(OS),Windows_NT)
    root ?= $(CURDIR)/../../../../..
else
    root ?= $(shell pwd)/../../../../..
endif

# Camunda components will be installed into the following Kubernetes namespace
namespace ?= $(region)
# Helm release name
release ?= camunda
# Helm chart coordinates for Camunda
chart ?= camunda/camunda-platform

# This file will be generated by make targets
chartValues ?= camunda-values.yaml

# .PHONY: all
# all: use-kube namespace prepare-elastic-backup-key camunda external-urls

.PHONY: all
all: camunda external-urls

# create peering connection
# make create-dual-region-peering

# accept peering connection between regions
# make accept-peering-connection
.PHONY: peering-connection
peering-conection: create-dual-region-peering

# update route tables
# make update-route-tables-region

# update all inbond and outbound security group rules region 0
# make update-security-group-rules

# replace coredns configmap
# make replace-coredns-configmap

.PHONY: networking-rules
networking-rules: update-route-tables update-security-group-rules replace-coredns-configmap

.PHONY: kube
kube: kube-dual-region

# 7 Show external URLs
.PHONY: external-urls
external-urls: external-urls-no-ingress

.PHONY: clean
clean: clean-camunda clean-ingress clean-cert-manager
	rm -f $(chartValues)

.PHONY: clean-kube
clean-kube: clean-kube-region-aws

include $(root)/aws/include/kubernetes-aws.mk
include $(root)/include/camunda.mk
