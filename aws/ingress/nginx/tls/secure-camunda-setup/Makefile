# ------------------------------------
# Set the following for your specific environment
# Already have a Cluster? Set these values to point to your existing environment
# Otherwise, these values will be used to create a new Cluster

region ?= ap-southeast-1
zones ?= ['ap-southeast-1a', 'ap-southeast-1b','ap-southeast-1c']
clusterName ?= jothi-poc-tls
clusterVersion ?= 1.31

machineType ?= c6i.2xlarge
# TODO: Currently, auto scaling configuration using these scripts for AWS is not working
# desiredSize is used as the starting size of the cluster
desiredSize ?= 3
minSize ?= 1
maxSize ?= 24
certEmail ?= jothikiruthika.viswanathan@camunda.com

#AWS loadbalancers have a domain name like a169d06d7b1c24601a1884934f7964ab-260361959.ap-southeast-1.elb.amazonaws.com


# ------------------------------------
# The following variables should not be changed except for advanced use cases
ifeq ($(OS),Windows_NT)
    root ?= $(CURDIR)/../../../../..
else
    root ?= $(shell pwd)/../../../../..
endif

# Camunda components will be installed into the following Kubernetes namespace
namespace ?= camunda
# Helm release name
release ?= camunda
# Helm chart coordinates for Camunda
chart ?= camunda/camunda-platform

# This file will be generated by make targets
chartValues ?= camunda-values-ingress-tls-aws-secure.yaml

.PHONY: all
all: ingress-nginx cert-manager letsencrypt-prod camunda-values-ingress-tls-aws-secure.yaml generate-certs camunda annotate-ingress-tls external-urls

.PHONY: generate-certs
generate-certs:
	 kubectl create ns $(namespace)
	 kubectl apply -f self-signed-cert.yaml -n $(namespace)

.PHONY: external-urls
external-urls: external-urls-all

# Getting url for grafana is vendor specific
.PHONY: url-grafana
url-grafana:
	@echo "http://`kubectl get svc metrics-grafana-loadbalancer -n default -o 'custom-columns=ip:status.loadBalancer.ingress[0].hostname' | tail -n 1`/d/zeebe-dashboard/zeebe?var-namespace=$(namespace)"

.PHONY: clean
clean: clean-camunda clean-ingress clean-cert-manager
	rm -f $(chartValues)

.PHONY: clean-kube
clean-kube: clean-metrics clean-kube-aws

include $(root)/aws/include/kubernetes-aws.mk
include $(root)/include/camunda.mk
include $(root)/bpmn/deploy-models.mk
include $(root)/include/ingress-nginx.mk
include $(root)/include/cert-manager.mk
include $(root)/metrics/metrics.mk
include $(root)/kibana/kibana.mk
